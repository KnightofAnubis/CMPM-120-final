class playerChar extends Phaser.Physics.Arcade.Sprite {
    constructor(scene, x, y, texture, frame) {
        super(scene, x, y, texture, frame);
        this.scene = scene
        this.scene.add.existing(this);
        this.scene.physics.add.existing(this);
        this.body.onOverlap = true;
        this.body.setCollideWorldBounds(true);
        const tags = this.anims.createFromAseprite('dorothy');
        console.log(tags);
        this.isMotion = false;
        // this.on(Phaser.Animations.Events.ANIMATION_COMPLETE, function () {
        //     this.isMotion = false;
        // }, this);
    }

    create() {

        // this.scene.anims.create({
        //     key: 'charUP',
        //     defaultTextureKey: 'dorothy',
        //     frames: [
        //         `dorothy_10`,
        //         `dorothy_9`,
        //         `dorothy_11`,
        //         `dorothy_9`,
        //     ],
        //     frameRate: 10,
        //     repeat: -1 
        // });
        // this.scene.anims.create({
        //     key: 'charDOWN',
        //     defaultTextureKey: 'dorothy',
        //     frames: [
        //         `dorothy_1`,
        //         `dorothy_0`,
        //         `dorothy_2`,
        //         `dorothy_0`,
        //     ],
        //     frameRate: 40,
        // });
        // this.scene.anims.create({
        //     key: 'charRIGHT',
        //     defaultTextureKey: 'dorothy',
        //     frames: [
        //         `dorothy_4`,
        //         `dorothy_3`,
        //         `dorothy_5`,
        //         `dorothy_3`,
        //     ],
        //     frameRate: 40,
        // });
        // this.scene.anims.create({
        //     key: 'charLEFT',
        //     defaultTextureKey: 'dorothy',
        //     frames: [
        //         `dorothy_7`,
        //         `dorothy_6`,
        //         `dorothy_8`,
        //         `dorothy_6`,
        //     ],
        //     frameRate: 40
        // });
        // this.anims.play('charUP');
    }

    update() {
        if (Phaser.Input.Keyboard.JustDown(keyW)) {
            this.body.setVelocity(0, -this.scene.VEL);
            this.play({ key: 'charUP', repeat: -1 });
        } else {
            if (Phaser.Input.Keyboard.JustDown(keyS)) {
                this.body.setVelocity(0, this.scene.VEL);
                this.anims.play({ key: 'charDOWN', repeat: -1 });
            } else {
                if (Phaser.Input.Keyboard.JustDown(keyA)) {
                    this.body.setVelocity(-this.scene.VEL, 0);
                    this.anims.play({ key: 'charLEFT', repeat: -1 });
                } else {
                    if (Phaser.Input.Keyboard.JustDown(keyD)) {
                        this.body.setVelocity(this.scene.VEL, 0);
                        this.anims.play({ key: 'charRIGHT', repeat: -1 });
                    } else {
                        if ((keyW.isUp && keyA.isUp) && (keyS.isUp && keyD.isUp)) {
                            this.anims.stopAfterRepeat(0);
                            this.body.setVelocity(0, 0);
                            this.isMotion = false;
                        }
                    }
                }
            }
        }


    }
}
